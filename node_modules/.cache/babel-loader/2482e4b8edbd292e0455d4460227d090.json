{"ast":null,"code":"import { solution } from './words';\nexport const getDistances = guesses => {\n  const charObj = {};\n  guesses.forEach(word => {\n    word.split('').forEach((letter, i) => {\n      const correctLetterPos = solution[i].charCodeAt(0) - 65;\n      const guessedLetterPos = letter.charCodeAt(0) - 65;\n      const delta = guessedLetterPos - correctLetterPos;\n      return charObj[letter] = delta;\n    });\n  });\n  return charObj;\n};\nexport const getGuessDistances = guess => {\n  const splitSolution = solution.split('');\n  const splitGuess = guess.split('');\n  const statuses = Array.from(Array(guess.length));\n  splitGuess.forEach((letter, i) => {\n    const correctLetterPos = splitSolution[i].charCodeAt(0) - 65;\n    const guessedLetterPos = letter.charCodeAt(0) - 65;\n    return statuses[i] = guessedLetterPos - correctLetterPos;\n  });\n  console.log(\"getGuessDistances\", statuses);\n  return statuses;\n};","map":{"version":3,"sources":["/Users/matthewwein/Desktop/Game/react-wordle/src/lib/statuses.ts"],"names":["solution","getDistances","guesses","charObj","forEach","word","split","letter","i","correctLetterPos","charCodeAt","guessedLetterPos","delta","getGuessDistances","guess","splitSolution","splitGuess","statuses","Array","from","length","console","log"],"mappings":"AAAA,SAASA,QAAT,QAAyB,SAAzB;AAEA,OAAO,MAAMC,YAAY,GACvBC,OAD0B,IAEI;AAC9B,QAAMC,OAAkC,GAAG,EAA3C;AAEAD,EAAAA,OAAO,CAACE,OAAR,CAAiBC,IAAD,IAAU;AACxBA,IAAAA,IAAI,CAACC,KAAL,CAAW,EAAX,EAAeF,OAAf,CAAuB,CAACG,MAAD,EAASC,CAAT,KAAe;AACpC,YAAMC,gBAAgB,GAAGT,QAAQ,CAACQ,CAAD,CAAR,CAAYE,UAAZ,CAAuB,CAAvB,IAA4B,EAArD;AACA,YAAMC,gBAAgB,GAAGJ,MAAM,CAACG,UAAP,CAAkB,CAAlB,IAAuB,EAAhD;AAEA,YAAME,KAAK,GAAGD,gBAAgB,GAAGF,gBAAjC;AAEA,aAAQN,OAAO,CAACI,MAAD,CAAP,GAAkBK,KAA1B;AACD,KAPD;AAQD,GATD;AAWA,SAAOT,OAAP;AACD,CAjBM;AAmBP,OAAO,MAAMU,iBAAiB,GAAIC,KAAD,IAA6B;AAC5D,QAAMC,aAAa,GAAGf,QAAQ,CAACM,KAAT,CAAe,EAAf,CAAtB;AACA,QAAMU,UAAU,GAAGF,KAAK,CAACR,KAAN,CAAY,EAAZ,CAAnB;AAEA,QAAMW,QAAkB,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACJ,KAAK,CAACM,MAAP,CAAhB,CAA3B;AAEAJ,EAAAA,UAAU,CAACZ,OAAX,CAAmB,CAACG,MAAD,EAASC,CAAT,KAAe;AAChC,UAAMC,gBAAgB,GAAGM,aAAa,CAACP,CAAD,CAAb,CAAiBE,UAAjB,CAA4B,CAA5B,IAAiC,EAA1D;AACA,UAAMC,gBAAgB,GAAGJ,MAAM,CAACG,UAAP,CAAkB,CAAlB,IAAuB,EAAhD;AACA,WAAOO,QAAQ,CAACT,CAAD,CAAR,GAAcG,gBAAgB,GAAGF,gBAAxC;AACD,GAJD;AAMAY,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,QAAjC;AACA,SAAOA,QAAP;AACD,CAdM","sourcesContent":["import { solution } from './words'\n\nexport const getDistances = (\n  guesses: string[]\n): { [key: string]: number } => {\n  const charObj: { [key: string]: number } = {}\n\n  guesses.forEach((word) => {\n    word.split('').forEach((letter, i) => {\n      const correctLetterPos = solution[i].charCodeAt(0) - 65\n      const guessedLetterPos = letter.charCodeAt(0) - 65\n\n      const delta = guessedLetterPos - correctLetterPos\n\n      return (charObj[letter] = delta)\n    })\n  })\n\n  return charObj\n}\n\nexport const getGuessDistances = (guess: string): number[] => {\n  const splitSolution = solution.split('')\n  const splitGuess = guess.split('')\n\n  const statuses: number[] = Array.from(Array(guess.length))\n\n  splitGuess.forEach((letter, i) => {\n    const correctLetterPos = splitSolution[i].charCodeAt(0) - 65\n    const guessedLetterPos = letter.charCodeAt(0) - 65\n    return statuses[i] = guessedLetterPos - correctLetterPos\n  })\n\n  console.log(\"getGuessDistances\", statuses)\n  return statuses\n}\n"]},"metadata":{},"sourceType":"module"}